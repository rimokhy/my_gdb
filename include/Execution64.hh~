//
// Execution64.hh for  in /home/rimokh_y/secu_training/tracker
// 
// Made by Yohan RIMOKH
// Login   <rimokh_y@epitech.eu>
// 
// Started on  Wed May  4 05:34:07 2016 Yohan RIMOKH
// Last update Wed May  4 07:40:14 2016 Yohan RIMOKH
//

#pragma once

extern int      g_pid;

struct user_fpregs_struct
{
  unsigned short int    cwd;
  unsigned short int    swd;
  unsigned short int    ftw;
  unsigned short int    fop;
  __extension__ unsigned long long int rip;
  __extension__ unsigned long long int rdp;
  unsigned int          mxcsr;
  unsigned int          mxcr_mask;
  unsigned int          st_space[32];   /* 8*16 bytes for each FP-reg = 128 bytes */
  unsigned int          xmm_space[64];  /* 16*16 bytes for each XMM-reg = 256 bytes */
  unsigned int          padding[24];
};

struct user_regs_struct
{
  __extension__ unsigned long long int r15;
  __extension__ unsigned long long int r14;
  __extension__ unsigned long long int r13;
  __extension__ unsigned long long int r12;
  __extension__ unsigned long long int rbp;
  __extension__ unsigned long long int rbx;
  __extension__ unsigned long long int r11;
  __extension__ unsigned long long int r10;
  __extension__ unsigned long long int r9;
  __extension__ unsigned long long int r8;
  __extension__ unsigned long long int rax;
  __extension__ unsigned long long int rcx;
  __extension__ unsigned long long int rdx;
  __extension__ unsigned long long int rsi;
  __extension__ unsigned long long int rdi;
  __extension__ unsigned long long int orig_rax;
  __extension__ unsigned long long int rip;
  __extension__ unsigned long long int cs;
  __extension__ unsigned long long int eflags;
  __extension__ unsigned long long int rsp;
  __extension__ unsigned long long int ss;
  __extension__ unsigned long long int fs_base;
  __extension__ unsigned long long int gs_base;
  __extension__ unsigned long long int ds;
  __extension__ unsigned long long int es;
  __extension__ unsigned long long int fs;
  __extension__ unsigned long long int gs;
};

struct user
{
  struct user_regs_struct       regs;
  int                           u_fpvalid;
  struct user_fpregs_struct     i387;
  __extension__ unsigned long long int  u_tsize;
  __extension__ unsigned long long int  u_dsize;
  __extension__ unsigned long long int  u_ssize;
  __extension__ unsigned long long int  start_code;
  __extension__ unsigned long long int  start_stack;
  __extension__ long long int           signal;
  int                           reserved;
  __extension__ union
  {
    struct user_regs_struct*  u_ar0;
    __extension__ unsigned long long int      __u_ar0_word;
  };
  __extension__ union
  {
    struct user_fpregs_struct*        u_fpstate;
    __extension__ unsigned long long int      __u_fpstate_word;
  };
  __extension__ unsigned long long int  magic;
  char                          u_comm [32];
  __extension__ unsigned long long int  u_debugreg [8];
};

typedef struct user_regs_struct Registers;


#define PAGE_SHIFT              12
#define PAGE_SIZE               (1UL << PAGE_SHIFT)
#define PAGE_MASK               (~(PAGE_SIZE-1))
#define NBPG                    PAGE_SIZE
#define UPAGES                  1
#define HOST_TEXT_START_ADDR    (u.start_code)
#define HOST_STACK_END_ADDR     (u.start_stack + u.u_ssize * NBPG)

# define PARAM1 regs.rdi

# define PARAM2 regs.rsi

# define PARAM3 regs.rdx

# define PARAM4 regs.rcx

# define PARAM5 regs.r8

# define PARAM6 regs.r9

# define CALL_PROC regs.rip

# define UPPER_BOUND 0x700000000000

# define RETURN regs.rax
